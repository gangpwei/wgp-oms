#各种分库分表策略
#配置多个数据源
spring.shardingsphere.datasource.names=m1,m2

spring.shardingsphere.datasource.m1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m1.url=jdbc:mysql://localhost:3306/oms1?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m1.username=root
spring.shardingsphere.datasource.m1.password=12345678

spring.shardingsphere.datasource.m2.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.m2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.m2.url=jdbc:mysql://localhost:3306/oms2?serverTimezone=GMT%2B8
spring.shardingsphere.datasource.m2.username=root
spring.shardingsphere.datasource.m2.password=12345678
#真实表分布，分库，分表
spring.shardingsphere.sharding.tables.order.actual-data-nodes=m$->{1..2}.order_$->{1..2}

#spring.shardingsphere.sharding.tables.order.key-generator.column=order_id
#spring.shardingsphere.sharding.tables.order.key-generator.type=SNOWFLAKE
#spring.shardingsphere.sharding.tables.order.key-generator.props.worker.id=1

#inline分片策略
spring.shardingsphere.sharding.tables.order.database-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.order.database-strategy.inline.algorithm-expression=m$->{((order_id%4+1).intdiv(3))+1}

spring.shardingsphere.sharding.tables.order.table-strategy.inline.sharding-column=order_id
spring.shardingsphere.sharding.tables.order.table-strategy.inline.algorithm-expression=order_$->{((order_id%4+1)%2)+1}

spring.shardingsphere.props.sql.show = true

#standard标准分片策略
#spring.shardingsphere.sharding.tables.order.table-strategy.standard.sharding-column=order_id
#spring.shardingsphere.sharding.tables.order.table-strategy.standard.precise-algorithm-class-name=com.roy.shardingDemo.algorithm.MyPreciseTableShardingAlgorithm
#spring.shardingsphere.sharding.tables.order.table-strategy.standard.range-algorithm-class-name=com.roy.shardingDemo.algorithm.MyRangeTableShardingAlgorithm
#
#spring.shardingsphere.sharding.tables.order.database-strategy.standard.sharding-column=order_id
#spring.shardingsphere.sharding.tables.order.database-strategy.standard.precise-algorithm-class-name=com.roy.shardingDemo.algorithm.MyPreciseDSShardingAlgorithm
#spring.shardingsphere.sharding.tables.order.database-strategy.standard.range-algorithm-class-name=com.roy.shardingDemo.algorithm.MyRangeDSShardingAlgorithm

#complex复杂分片策略
#spring.shardingsphere.sharding.tables.order.table-strategy.complex.sharding-columns= order_id, user_id
#spring.shardingsphere.sharding.tables.order.table-strategy.complex.algorithm-class-name=com.roy.shardingDemo.algorithem.MyComplexTableShardingAlgorithm
#
#spring.shardingsphere.sharding.tables.order.database-strategy.complex.sharding-columns=order_id, user_id
#spring.shardingsphere.sharding.tables.order.database-strategy.complex.algorithm-class-name=com.roy.shardingDemo.algorithem.MyComplexDSShardingAlgorithm
#hint强制路由策略
#spring.shardingsphere.sharding.tables.order.table-strategy.hint.algorithm-class-name=com.roy.shardingDemo.algorithem.MyHintTableShardingAlgorithm
#广播表配置
#spring.shardingsphere.sharding.broadcast-tables=t_dict
#spring.shardingsphere.sharding.tables.t_dict.key-generator.column=dict_id
#spring.shardingsphere.sharding.tables.t_dict.key-generator.type=SNOWFLAKE


#spring.main.allow-bean-definition-overriding=true

